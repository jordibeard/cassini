---
- name: 'Configure WIFI'
  copy: src=secret_files/wpa_supplicant.conf dest=/etc/wpa_supplicant/wpa_supplicant.conf mode=0600

#- name: 'Update APT package cache'
#  action: apt update_cache=yes

#- name: 'Upgrade APT to the latest packages'
#  action: apt upgrade=safe

- name: 'Ensure log directory'
  action: file dest={{log_dir}} state=directory mode=777

- name: 'Ensure data directory'
  action: file dest={{data_dir}} state=directory mode=770

- name: 'ensure .ssh directory'
  action: file dest=/root/.ssh/ state=directory mode=770

- name: 'copy over ssh keys for deploy purposes'
  action: copy src={{item.from}} dest={{item.to}} mode={{item.mode}}
  with_items:
      - { from: 'secret_files/deploy_rsa.pub', to: '/root/.ssh/id_rsa.pub', mode: '0644' }
      - { from: 'secret_files/deploy_rsa', to: '/root/.ssh/id_rsa', mode: '0600' }

- name: 'Deploy code from git'
  git: repo={{repo_url}} dest={{src_dir}} remote={{repo_remote}} version={{repo_branch}} accept_hostkey=yes force=yes
  tags: code

- name: 'Ensure secret_files directory'
  action: file dest={{src_dir}}/ansible-pi/secret_files state=directory

- name: 'install python requirements'
  action: pip requirements={{src_dir}}/requirements.txt state=present

- name: 'Copy secret.json file'
  copy: src=secret_files/secret.json dest={{src_dir}}/ansible-pi/secret_files/secret.json
  tags: code

- name: 'Copy rc.local'
  action: template src=templates/rc.local dest=/etc/rc.local

- name: 'Copy etc/network/intefaces'
  action: template src=templates/interfaces dest=/etc/network/interfaces

- name: 'Copy cmdline.txt'
  action: template src=templates/cmdline.txt dest=/boot/cmdline.txt

#- name: 'Update Aptitude'
#  apt: update_cache=yes cache_valid_time=3600

- name: 'Install occi'
  action: install_occi

- name: 'install node'
  action: apt pkg=$item state=installed
  with_items:
    - node
    - npm

- name: 'install imageviewers'
  action: apt pkg=$item state=installed
  with_items:
    - imagemagick
    - caca-utils

# https://www.npmjs.com/package/ngrok
- name: Install packages based on package.json.
  npm: path={{src_dir}}


# install ytalk
- name: 'install ytalk'
  action: apt pkg=$item state=installed
  with_items:
    - ytalk


# copy over inted.conf
- name: 'Copy inetd.conf'
  action: template src=templates/inetd.conf dest=/etc/inetd.conf


- name: 'crontab to add new users'
  cron: name="add new users" minute="*/1" job="export PYTHONPATH={{src_dir}}:$PYTHONPATH && /usr/bin/python {{src_dir}}/oasis_python/create_new_users.py > {{log_dir}}/cron.log 2> {{log_dir}}/cron.error"
  tags: cron

#- name: for removing add new users cronjob
#  cron: name="add new users" state=absent
#  tags: code

- name: 'crontab for greeting room'
  cron: name="greeting room" minute="*/1" job="{{src_dir}}/bash/greetingroom.sh"
  tags: cron

- name: 'make bash scripts executable'
  file: path={{src_dir}}/bash state=directory mode=0770 owner=root group=root recurse=yes
  tags: code

#- name: 'Reboot'
#  command: /sbin/reboot

